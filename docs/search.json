[
  {
    "objectID": "create-dataset.html",
    "href": "create-dataset.html",
    "title": "Create the Gapminder dataset",
    "section": "",
    "text": "# Import necessary libraries\nimport pandas as pd\nfrom gapminder import gapminder\n\n# Rename 'lifeExp' to 'life_expectancy' and 'gdpPercap' to 'gdp_per_capita'\ngapminder = gapminder.rename(columns={'lifeExp': 'life_expectancy',\n                                      'pop': 'population_millions', \n                                      'gdpPercap': 'gdp_per_capita'})\n\n# Convert population to millions\ngapminder['population_millions'] = gapminder['population_millions'] / 1_000_000\n\n# Create a new pandas DataFrame from the modified gapminder data\ngapminder_df = pd.DataFrame(gapminder)\n\n# Save the DataFrame as a CSV file\ngapminder_df.to_csv('gapminder.csv', index=False)\n\n# Print the first 3 rows of the DataFrame\nprint(gapminder_df.head(3))\n\n\n---------------------------------------------------------------------------\nModuleNotFoundError                       Traceback (most recent call last)\nCell In[2], line 2\n      1 # Import necessary libraries\n----&gt; 2 import pandas as pd\n      3 from gapminder import gapminder\n      5 # Rename 'lifeExp' to 'life_expectancy' and 'gdpPercap' to 'gdp_per_capita'\n\nModuleNotFoundError: No module named 'pandas'"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "life-gdp.html",
    "href": "life-gdp.html",
    "title": "Life Expectancy and GDP per Capita",
    "section": "",
    "text": "This page explores the relationship between life expectancy and GDP per capita using the Gapminder dataset."
  },
  {
    "objectID": "life-gdp.html#introduction",
    "href": "life-gdp.html#introduction",
    "title": "Life Expectancy and GDP per Capita",
    "section": "",
    "text": "This page explores the relationship between life expectancy and GDP per capita using the Gapminder dataset."
  },
  {
    "objectID": "life-gdp.html#analysis",
    "href": "life-gdp.html#analysis",
    "title": "Life Expectancy and GDP per Capita",
    "section": "Analysis",
    "text": "Analysis\nWe will create a scatter plot to visualize this relationship.\n\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(gapminder)\n\n# Create scatter plot\nggplot(gapminder, aes(x = gdpPercap, y = lifeExp)) +\n  geom_point(size = 3, alpha = 0.7) +\n  scale_x_log10() +  # Log scale for GDP per capita\n  labs(\n    title = \"Life Expectancy vs GDP per Capita\",\n    x = \"GDP per Capita (Log Scale)\",\n    y = \"Life Expectancy (years)\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "country.html",
    "href": "country.html",
    "title": "Country Analysis: Life Expectancy, GDP per Capita, and Population Over Time in India",
    "section": "",
    "text": "In this example, we’ll analyze data for India.\n\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(gapminder)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# Filter the dataset for a specific country (India)\ncountry_data &lt;- gapminder %&gt;% filter(country == \"India\")\n\n# Create a plot for life expectancy, GDP per capita, and population over time\nggplot(country_data, aes(x = year)) +\n  geom_line(aes(y = lifeExp, color = \"Life Expectancy\"), size = 1.2) +\n  geom_line(aes(y = gdpPercap / 1000, color = \"GDP per Capita (x1000)\"), size = 1.2) +\n  geom_line(aes(y = pop / 1e7, color = \"Population (x10M)\"), size = 1.2) +\n  scale_y_continuous(\n    name = \"Life Expectancy\",\n    sec.axis = sec_axis(~ . * 1000, name = \"GDP per Capita (x1000)\")\n  ) +\n  labs(\n    title = \"Life Expectancy, GDP per Capita, and Population Over Time in India\",\n    x = \"Year\",\n    color = \"Metric\"\n  ) +\n  theme_minimal()\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead."
  },
  {
    "objectID": "country.html#analysis",
    "href": "country.html#analysis",
    "title": "Country Analysis: Life Expectancy, GDP per Capita, and Population Over Time in India",
    "section": "",
    "text": "In this example, we’ll analyze data for India.\n\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(gapminder)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# Filter the dataset for a specific country (India)\ncountry_data &lt;- gapminder %&gt;% filter(country == \"India\")\n\n# Create a plot for life expectancy, GDP per capita, and population over time\nggplot(country_data, aes(x = year)) +\n  geom_line(aes(y = lifeExp, color = \"Life Expectancy\"), size = 1.2) +\n  geom_line(aes(y = gdpPercap / 1000, color = \"GDP per Capita (x1000)\"), size = 1.2) +\n  geom_line(aes(y = pop / 1e7, color = \"Population (x10M)\"), size = 1.2) +\n  scale_y_continuous(\n    name = \"Life Expectancy\",\n    sec.axis = sec_axis(~ . * 1000, name = \"GDP per Capita (x1000)\")\n  ) +\n  labs(\n    title = \"Life Expectancy, GDP per Capita, and Population Over Time in India\",\n    x = \"Year\",\n    color = \"Metric\"\n  ) +\n  theme_minimal()\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Gapminder Dataset Overview",
    "section": "",
    "text": "The gapminder dataset provides information on various different worldwide indices overtime including GPD per capita, life expectancy, and population."
  },
  {
    "objectID": "index.html#analysis-pages",
    "href": "index.html#analysis-pages",
    "title": "Gapminder Dataset Overview",
    "section": "Analysis Pages",
    "text": "Analysis Pages\n\nLife Expectancy and GDP per Capita\nLife Expectancy and Population\nCountry Analysis"
  },
  {
    "objectID": "life-population.html",
    "href": "life-population.html",
    "title": "Life Expectancy and Population",
    "section": "",
    "text": "We’ll create a scatter plot to visualize the relationship between population size and life expectancy.\n\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(gapminder)\n\n# Filter the dataset to the most recent year available\nlatest_data &lt;- gapminder[gapminder$year == max(gapminder$year),]\n\n# Create scatter plot\nggplot(gapminder, aes(x = pop, y = lifeExp)) +\n  geom_point(size = 3, alpha = 0.7) +\n  scale_x_log10() +  # Log scale for population\n  labs(\n    title = \"Life Expectancy vs Population\",\n    x = \"Population (Log Scale)\",\n    y = \"Life Expectancy (years)\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "life-population.html#analysis",
    "href": "life-population.html#analysis",
    "title": "Life Expectancy and Population",
    "section": "",
    "text": "We’ll create a scatter plot to visualize the relationship between population size and life expectancy.\n\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(gapminder)\n\n# Filter the dataset to the most recent year available\nlatest_data &lt;- gapminder[gapminder$year == max(gapminder$year),]\n\n# Create scatter plot\nggplot(gapminder, aes(x = pop, y = lifeExp)) +\n  geom_point(size = 3, alpha = 0.7) +\n  scale_x_log10() +  # Log scale for population\n  labs(\n    title = \"Life Expectancy vs Population\",\n    x = \"Population (Log Scale)\",\n    y = \"Life Expectancy (years)\"\n  ) +\n  theme_minimal()"
  }
]